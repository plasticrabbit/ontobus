private import tango.io.Stdout;

class List
{
//для всех листов можно выделить общую память заранее и пусть они динамически ее используют
//еще можно попробовать вариант с ссылочным списком, без возможности выбора произвольный элемент

	uint max_size = 100;
	uint cur_size = 0;
	uint max_chunks_size = 200;
	uint chunks_size = 0;
	Object[][] elements;

	this()
	{
		elements = new Object[][max_chunks_size];
		elements[0] = new Object[max_size];
	}

	this(int inital_size)
	{
	 max_size = inital_size;
		elements = new Object[][max_chunks_size];
		elements[0] = new Object[max_size];
	}

	public void add(Object element)
	{
		if(cur_size >= max_size)
		{
			chunks_size++;
			cur_size = 0;
			elements[chunks_size] = new Object[max_size];
		}

		Object[] in_array = elements[chunks_size];
		in_array[cur_size] = element;
		//			Stdout.format("List:cur_size,chunks_size = [{},{}]", cur_size, chunks_size).newline;
		cur_size++;
	}

	public Object get(uint idx)
	{
		uint i_chunks_size = idx / max_size;
		uint i_cur_size = idx - i_chunks_size * max_size;
		Object[] in_array = elements[i_chunks_size];
////		Stdout.format("List:idx={}, i_chunks_size = {}, i_cur_size={}", idx,
//				i_chunks_size, i_cur_size).newline;
		return in_array[i_cur_size];
	}

	public uint size()
	{
		return chunks_size * max_size + cur_size;
	}
}